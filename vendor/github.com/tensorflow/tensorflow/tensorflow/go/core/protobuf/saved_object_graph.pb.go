// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/protobuf/saved_object_graph.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import tensorflow "github.com/tensorflow/tensorflow/tensorflow/go/core/framework"
import tensorflow1 "github.com/tensorflow/tensorflow/tensorflow/go/core/framework"
import tensorflow8 "github.com/tensorflow/tensorflow/tensorflow/go/core/framework"
import tensorflow10 "tensorflow/core/framework"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SavedObjectGraph struct {
	// Flattened list of objects in the object graph.
	//
	// The position of the object in this list indicates its id.
	// Nodes[0] is considered the root node.
	Nodes []*SavedObject `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	// Information about captures and output structures in concrete functions.
	// Referenced from SavedBareConcreteFunction and SavedFunction.
	ConcreteFunctions map[string]*SavedConcreteFunction `protobuf:"bytes,2,rep,name=concrete_functions,json=concreteFunctions" json:"concrete_functions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SavedObjectGraph) Reset()                    { *m = SavedObjectGraph{} }
func (m *SavedObjectGraph) String() string            { return proto.CompactTextString(m) }
func (*SavedObjectGraph) ProtoMessage()               {}
func (*SavedObjectGraph) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SavedObjectGraph) GetNodes() []*SavedObject {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *SavedObjectGraph) GetConcreteFunctions() map[string]*SavedConcreteFunction {
	if m != nil {
		return m.ConcreteFunctions
	}
	return nil
}

type SavedObject struct {
	// Objects which this object depends on: named edges in the dependency
	// graph.
	//
	// Note: currently only valid if kind == "user_object".
	Children []*TrackableObjectGraph_TrackableObject_ObjectReference `protobuf:"bytes,1,rep,name=children" json:"children,omitempty"`
	// Slot variables owned by this object. This describes the three-way
	// (optimizer, variable, slot variable) relationship; none of the three
	// depend on the others directly.
	//
	// Note: currently only valid if kind == "user_object".
	SlotVariables []*TrackableObjectGraph_TrackableObject_SlotVariableReference `protobuf:"bytes,3,rep,name=slot_variables,json=slotVariables" json:"slot_variables,omitempty"`
	// Types that are valid to be assigned to Kind:
	//	*SavedObject_UserObject
	//	*SavedObject_Asset
	//	*SavedObject_Function
	//	*SavedObject_Variable
	//	*SavedObject_BareConcreteFunction
	//	*SavedObject_Constant
	//	*SavedObject_Resource
	Kind isSavedObject_Kind `protobuf_oneof:"kind"`
}

func (m *SavedObject) Reset()                    { *m = SavedObject{} }
func (m *SavedObject) String() string            { return proto.CompactTextString(m) }
func (*SavedObject) ProtoMessage()               {}
func (*SavedObject) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type isSavedObject_Kind interface {
	isSavedObject_Kind()
}

type SavedObject_UserObject struct {
	UserObject *SavedUserObject `protobuf:"bytes,4,opt,name=user_object,json=userObject,oneof"`
}
type SavedObject_Asset struct {
	Asset *SavedAsset `protobuf:"bytes,5,opt,name=asset,oneof"`
}
type SavedObject_Function struct {
	Function *SavedFunction `protobuf:"bytes,6,opt,name=function,oneof"`
}
type SavedObject_Variable struct {
	Variable *SavedVariable `protobuf:"bytes,7,opt,name=variable,oneof"`
}
type SavedObject_BareConcreteFunction struct {
	BareConcreteFunction *SavedBareConcreteFunction `protobuf:"bytes,8,opt,name=bare_concrete_function,json=bareConcreteFunction,oneof"`
}
type SavedObject_Constant struct {
	Constant *SavedConstant `protobuf:"bytes,9,opt,name=constant,oneof"`
}
type SavedObject_Resource struct {
	Resource *SavedResource `protobuf:"bytes,10,opt,name=resource,oneof"`
}

func (*SavedObject_UserObject) isSavedObject_Kind()           {}
func (*SavedObject_Asset) isSavedObject_Kind()                {}
func (*SavedObject_Function) isSavedObject_Kind()             {}
func (*SavedObject_Variable) isSavedObject_Kind()             {}
func (*SavedObject_BareConcreteFunction) isSavedObject_Kind() {}
func (*SavedObject_Constant) isSavedObject_Kind()             {}
func (*SavedObject_Resource) isSavedObject_Kind()             {}

func (m *SavedObject) GetKind() isSavedObject_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *SavedObject) GetChildren() []*TrackableObjectGraph_TrackableObject_ObjectReference {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *SavedObject) GetSlotVariables() []*TrackableObjectGraph_TrackableObject_SlotVariableReference {
	if m != nil {
		return m.SlotVariables
	}
	return nil
}

func (m *SavedObject) GetUserObject() *SavedUserObject {
	if x, ok := m.GetKind().(*SavedObject_UserObject); ok {
		return x.UserObject
	}
	return nil
}

func (m *SavedObject) GetAsset() *SavedAsset {
	if x, ok := m.GetKind().(*SavedObject_Asset); ok {
		return x.Asset
	}
	return nil
}

func (m *SavedObject) GetFunction() *SavedFunction {
	if x, ok := m.GetKind().(*SavedObject_Function); ok {
		return x.Function
	}
	return nil
}

func (m *SavedObject) GetVariable() *SavedVariable {
	if x, ok := m.GetKind().(*SavedObject_Variable); ok {
		return x.Variable
	}
	return nil
}

func (m *SavedObject) GetBareConcreteFunction() *SavedBareConcreteFunction {
	if x, ok := m.GetKind().(*SavedObject_BareConcreteFunction); ok {
		return x.BareConcreteFunction
	}
	return nil
}

func (m *SavedObject) GetConstant() *SavedConstant {
	if x, ok := m.GetKind().(*SavedObject_Constant); ok {
		return x.Constant
	}
	return nil
}

func (m *SavedObject) GetResource() *SavedResource {
	if x, ok := m.GetKind().(*SavedObject_Resource); ok {
		return x.Resource
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SavedObject) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SavedObject_OneofMarshaler, _SavedObject_OneofUnmarshaler, _SavedObject_OneofSizer, []interface{}{
		(*SavedObject_UserObject)(nil),
		(*SavedObject_Asset)(nil),
		(*SavedObject_Function)(nil),
		(*SavedObject_Variable)(nil),
		(*SavedObject_BareConcreteFunction)(nil),
		(*SavedObject_Constant)(nil),
		(*SavedObject_Resource)(nil),
	}
}

func _SavedObject_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SavedObject)
	// kind
	switch x := m.Kind.(type) {
	case *SavedObject_UserObject:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserObject); err != nil {
			return err
		}
	case *SavedObject_Asset:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Asset); err != nil {
			return err
		}
	case *SavedObject_Function:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Function); err != nil {
			return err
		}
	case *SavedObject_Variable:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Variable); err != nil {
			return err
		}
	case *SavedObject_BareConcreteFunction:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BareConcreteFunction); err != nil {
			return err
		}
	case *SavedObject_Constant:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Constant); err != nil {
			return err
		}
	case *SavedObject_Resource:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Resource); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SavedObject.Kind has unexpected type %T", x)
	}
	return nil
}

func _SavedObject_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SavedObject)
	switch tag {
	case 4: // kind.user_object
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SavedUserObject)
		err := b.DecodeMessage(msg)
		m.Kind = &SavedObject_UserObject{msg}
		return true, err
	case 5: // kind.asset
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SavedAsset)
		err := b.DecodeMessage(msg)
		m.Kind = &SavedObject_Asset{msg}
		return true, err
	case 6: // kind.function
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SavedFunction)
		err := b.DecodeMessage(msg)
		m.Kind = &SavedObject_Function{msg}
		return true, err
	case 7: // kind.variable
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SavedVariable)
		err := b.DecodeMessage(msg)
		m.Kind = &SavedObject_Variable{msg}
		return true, err
	case 8: // kind.bare_concrete_function
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SavedBareConcreteFunction)
		err := b.DecodeMessage(msg)
		m.Kind = &SavedObject_BareConcreteFunction{msg}
		return true, err
	case 9: // kind.constant
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SavedConstant)
		err := b.DecodeMessage(msg)
		m.Kind = &SavedObject_Constant{msg}
		return true, err
	case 10: // kind.resource
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SavedResource)
		err := b.DecodeMessage(msg)
		m.Kind = &SavedObject_Resource{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SavedObject_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SavedObject)
	// kind
	switch x := m.Kind.(type) {
	case *SavedObject_UserObject:
		s := proto.Size(x.UserObject)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SavedObject_Asset:
		s := proto.Size(x.Asset)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SavedObject_Function:
		s := proto.Size(x.Function)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SavedObject_Variable:
		s := proto.Size(x.Variable)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SavedObject_BareConcreteFunction:
		s := proto.Size(x.BareConcreteFunction)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SavedObject_Constant:
		s := proto.Size(x.Constant)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SavedObject_Resource:
		s := proto.Size(x.Resource)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A SavedUserObject is an object (in the object-oriented language of the
// TensorFlow program) of some user- or framework-defined class other than
// those handled specifically by the other kinds of SavedObjects.
//
// This object cannot be evaluated as a tensor, and therefore cannot be bound
// to an input of a function.
type SavedUserObject struct {
	// Corresponds to a registration of the type to use in the loading program.
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	// Version information from the producer of this SavedUserObject.
	Version *tensorflow8.VersionDef `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Initialization-related metadata.
	Metadata string `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
}

func (m *SavedUserObject) Reset()                    { *m = SavedUserObject{} }
func (m *SavedUserObject) String() string            { return proto.CompactTextString(m) }
func (*SavedUserObject) ProtoMessage()               {}
func (*SavedUserObject) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *SavedUserObject) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *SavedUserObject) GetVersion() *tensorflow8.VersionDef {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *SavedUserObject) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

// A SavedAsset points to an asset in the MetaGraph.
//
// When bound to a function this object evaluates to a tensor with the absolute
// filename. Users should not depend on a particular part of the filename to
// remain stable (e.g. basename could be changed).
type SavedAsset struct {
	// Index into `MetaGraphDef.asset_file_def[]` that describes the Asset.
	//
	// Only the field `AssetFileDef.filename` is used. Other fields, such as
	// `AssetFileDef.tensor_info`, MUST be ignored.
	AssetFileDefIndex int32 `protobuf:"varint,1,opt,name=asset_file_def_index,json=assetFileDefIndex" json:"asset_file_def_index,omitempty"`
}

func (m *SavedAsset) Reset()                    { *m = SavedAsset{} }
func (m *SavedAsset) String() string            { return proto.CompactTextString(m) }
func (*SavedAsset) ProtoMessage()               {}
func (*SavedAsset) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *SavedAsset) GetAssetFileDefIndex() int32 {
	if m != nil {
		return m.AssetFileDefIndex
	}
	return 0
}

// A function with multiple signatures, possibly with non-Tensor arguments.
type SavedFunction struct {
	ConcreteFunctions []string      `protobuf:"bytes,1,rep,name=concrete_functions,json=concreteFunctions" json:"concrete_functions,omitempty"`
	FunctionSpec      *FunctionSpec `protobuf:"bytes,2,opt,name=function_spec,json=functionSpec" json:"function_spec,omitempty"`
}

func (m *SavedFunction) Reset()                    { *m = SavedFunction{} }
func (m *SavedFunction) String() string            { return proto.CompactTextString(m) }
func (*SavedFunction) ProtoMessage()               {}
func (*SavedFunction) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *SavedFunction) GetConcreteFunctions() []string {
	if m != nil {
		return m.ConcreteFunctions
	}
	return nil
}

func (m *SavedFunction) GetFunctionSpec() *FunctionSpec {
	if m != nil {
		return m.FunctionSpec
	}
	return nil
}

// Stores low-level information about a concrete function. Referenced in either
// a SavedFunction or a SavedBareConcreteFunction.
type SavedConcreteFunction struct {
	// Bound inputs to the function. The SavedObjects identified by the node ids
	// given here are appended as extra inputs to the caller-supplied inputs.
	// The only types of SavedObjects valid here are SavedVariable, SavedResource
	// and SavedAsset.
	BoundInputs []int32 `protobuf:"varint,2,rep,packed,name=bound_inputs,json=boundInputs" json:"bound_inputs,omitempty"`
	// Input in canonicalized form that was received to create this concrete
	// function.
	CanonicalizedInputSignature *StructuredValue `protobuf:"bytes,3,opt,name=canonicalized_input_signature,json=canonicalizedInputSignature" json:"canonicalized_input_signature,omitempty"`
	// Output that was the return value of this function after replacing all
	// Tensors with TensorSpecs. This can be an arbitrary nested function and will
	// be used to reconstruct the full structure from pure tensors.
	OutputSignature *StructuredValue `protobuf:"bytes,4,opt,name=output_signature,json=outputSignature" json:"output_signature,omitempty"`
}

func (m *SavedConcreteFunction) Reset()                    { *m = SavedConcreteFunction{} }
func (m *SavedConcreteFunction) String() string            { return proto.CompactTextString(m) }
func (*SavedConcreteFunction) ProtoMessage()               {}
func (*SavedConcreteFunction) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SavedConcreteFunction) GetBoundInputs() []int32 {
	if m != nil {
		return m.BoundInputs
	}
	return nil
}

func (m *SavedConcreteFunction) GetCanonicalizedInputSignature() *StructuredValue {
	if m != nil {
		return m.CanonicalizedInputSignature
	}
	return nil
}

func (m *SavedConcreteFunction) GetOutputSignature() *StructuredValue {
	if m != nil {
		return m.OutputSignature
	}
	return nil
}

type SavedBareConcreteFunction struct {
	// Identifies a SavedConcreteFunction.
	ConcreteFunctionName string `protobuf:"bytes,1,opt,name=concrete_function_name,json=concreteFunctionName" json:"concrete_function_name,omitempty"`
	// A sequence of unique strings, one per Tensor argument.
	ArgumentKeywords []string `protobuf:"bytes,2,rep,name=argument_keywords,json=argumentKeywords" json:"argument_keywords,omitempty"`
	// The prefix of `argument_keywords` which may be identified by position.
	AllowedPositionalArguments int64 `protobuf:"varint,3,opt,name=allowed_positional_arguments,json=allowedPositionalArguments" json:"allowed_positional_arguments,omitempty"`
}

func (m *SavedBareConcreteFunction) Reset()                    { *m = SavedBareConcreteFunction{} }
func (m *SavedBareConcreteFunction) String() string            { return proto.CompactTextString(m) }
func (*SavedBareConcreteFunction) ProtoMessage()               {}
func (*SavedBareConcreteFunction) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *SavedBareConcreteFunction) GetConcreteFunctionName() string {
	if m != nil {
		return m.ConcreteFunctionName
	}
	return ""
}

func (m *SavedBareConcreteFunction) GetArgumentKeywords() []string {
	if m != nil {
		return m.ArgumentKeywords
	}
	return nil
}

func (m *SavedBareConcreteFunction) GetAllowedPositionalArguments() int64 {
	if m != nil {
		return m.AllowedPositionalArguments
	}
	return 0
}

type SavedConstant struct {
	// An Operation name for a ConstantOp in this SavedObjectGraph's MetaGraph.
	Operation string `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"`
}

func (m *SavedConstant) Reset()                    { *m = SavedConstant{} }
func (m *SavedConstant) String() string            { return proto.CompactTextString(m) }
func (*SavedConstant) ProtoMessage()               {}
func (*SavedConstant) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *SavedConstant) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

// Represents a Variable that is initialized by loading the contents from the
// checkpoint.
type SavedVariable struct {
	Dtype           tensorflow1.DataType                 `protobuf:"varint,1,opt,name=dtype,enum=tensorflow.DataType" json:"dtype,omitempty"`
	Shape           *tensorflow.TensorShapeProto         `protobuf:"bytes,2,opt,name=shape" json:"shape,omitempty"`
	Trainable       bool                                 `protobuf:"varint,3,opt,name=trainable" json:"trainable,omitempty"`
	Synchronization tensorflow10.VariableSynchronization `protobuf:"varint,4,opt,name=synchronization,enum=tensorflow.VariableSynchronization" json:"synchronization,omitempty"`
	Aggregation     tensorflow10.VariableAggregation     `protobuf:"varint,5,opt,name=aggregation,enum=tensorflow.VariableAggregation" json:"aggregation,omitempty"`
	Name            string                               `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
}

func (m *SavedVariable) Reset()                    { *m = SavedVariable{} }
func (m *SavedVariable) String() string            { return proto.CompactTextString(m) }
func (*SavedVariable) ProtoMessage()               {}
func (*SavedVariable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *SavedVariable) GetDtype() tensorflow1.DataType {
	if m != nil {
		return m.Dtype
	}
	return tensorflow1.DataType_DT_INVALID
}

func (m *SavedVariable) GetShape() *tensorflow.TensorShapeProto {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *SavedVariable) GetTrainable() bool {
	if m != nil {
		return m.Trainable
	}
	return false
}

func (m *SavedVariable) GetSynchronization() tensorflow10.VariableSynchronization {
	if m != nil {
		return m.Synchronization
	}
	return tensorflow10.VariableSynchronization_VARIABLE_SYNCHRONIZATION_AUTO
}

func (m *SavedVariable) GetAggregation() tensorflow10.VariableAggregation {
	if m != nil {
		return m.Aggregation
	}
	return tensorflow10.VariableAggregation_VARIABLE_AGGREGATION_NONE
}

func (m *SavedVariable) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Represents `FunctionSpec` used in `Function`. This represents a
// function that has been wrapped as a TensorFlow `Function`.
type FunctionSpec struct {
	// Full arg spec from inspect.getfullargspec().
	Fullargspec *StructuredValue `protobuf:"bytes,1,opt,name=fullargspec" json:"fullargspec,omitempty"`
	// Whether this represents a class method.
	IsMethod bool `protobuf:"varint,2,opt,name=is_method,json=isMethod" json:"is_method,omitempty"`
	// The input signature, if specified.
	InputSignature *StructuredValue `protobuf:"bytes,5,opt,name=input_signature,json=inputSignature" json:"input_signature,omitempty"`
}

func (m *FunctionSpec) Reset()                    { *m = FunctionSpec{} }
func (m *FunctionSpec) String() string            { return proto.CompactTextString(m) }
func (*FunctionSpec) ProtoMessage()               {}
func (*FunctionSpec) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *FunctionSpec) GetFullargspec() *StructuredValue {
	if m != nil {
		return m.Fullargspec
	}
	return nil
}

func (m *FunctionSpec) GetIsMethod() bool {
	if m != nil {
		return m.IsMethod
	}
	return false
}

func (m *FunctionSpec) GetInputSignature() *StructuredValue {
	if m != nil {
		return m.InputSignature
	}
	return nil
}

// A SavedResource represents a TF object that holds state during its lifetime.
// An object of this type can have a reference to a:
// create_resource() and an initialize() function.
type SavedResource struct {
	// A device specification indicating a required placement for the resource
	// creation function, e.g. "CPU". An empty string allows the user to select a
	// device.
	Device string `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *SavedResource) Reset()                    { *m = SavedResource{} }
func (m *SavedResource) String() string            { return proto.CompactTextString(m) }
func (*SavedResource) ProtoMessage()               {}
func (*SavedResource) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *SavedResource) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func init() {
	proto.RegisterType((*SavedObjectGraph)(nil), "tensorflow.SavedObjectGraph")
	proto.RegisterType((*SavedObject)(nil), "tensorflow.SavedObject")
	proto.RegisterType((*SavedUserObject)(nil), "tensorflow.SavedUserObject")
	proto.RegisterType((*SavedAsset)(nil), "tensorflow.SavedAsset")
	proto.RegisterType((*SavedFunction)(nil), "tensorflow.SavedFunction")
	proto.RegisterType((*SavedConcreteFunction)(nil), "tensorflow.SavedConcreteFunction")
	proto.RegisterType((*SavedBareConcreteFunction)(nil), "tensorflow.SavedBareConcreteFunction")
	proto.RegisterType((*SavedConstant)(nil), "tensorflow.SavedConstant")
	proto.RegisterType((*SavedVariable)(nil), "tensorflow.SavedVariable")
	proto.RegisterType((*FunctionSpec)(nil), "tensorflow.FunctionSpec")
	proto.RegisterType((*SavedResource)(nil), "tensorflow.SavedResource")
}

func init() { proto.RegisterFile("tensorflow/core/protobuf/saved_object_graph.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1055 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdb, 0x6e, 0x1b, 0x45,
	0x18, 0x8e, 0x0f, 0x9b, 0xda, 0xbf, 0x73, 0x70, 0x46, 0x21, 0x6c, 0x93, 0x00, 0xa9, 0x51, 0x45,
	0x04, 0xc4, 0x81, 0x14, 0x54, 0x84, 0x14, 0xd4, 0xa4, 0x21, 0xa4, 0x41, 0x85, 0x6a, 0x5c, 0x7a,
	0x05, 0x5a, 0x8d, 0x77, 0xff, 0x75, 0x96, 0xac, 0x67, 0xac, 0x99, 0xd9, 0x04, 0x57, 0x42, 0xbc,
	0x01, 0xaf, 0xc1, 0x03, 0x70, 0xcb, 0x05, 0xef, 0xc2, 0x4b, 0x70, 0x89, 0x76, 0x76, 0xd6, 0x5e,
	0x9f, 0x14, 0x7a, 0xe7, 0xf9, 0xe7, 0xfb, 0xbe, 0xf9, 0xcf, 0x6b, 0xf8, 0x54, 0x23, 0x57, 0x42,
	0x86, 0xb1, 0xb8, 0x3d, 0xf4, 0x85, 0xc4, 0xc3, 0x81, 0x14, 0x5a, 0x74, 0x93, 0xf0, 0x50, 0xb1,
	0x1b, 0x0c, 0x3c, 0xd1, 0xfd, 0x19, 0x7d, 0xed, 0xf5, 0x24, 0x1b, 0x5c, 0xb5, 0xcd, 0x1d, 0x81,
	0x31, 0x65, 0xfb, 0xf3, 0x85, 0x74, 0x2d, 0x99, 0x7f, 0xcd, 0xba, 0x31, 0xce, 0x91, 0xd8, 0x7e,
	0xb8, 0xf8, 0x55, 0x2d, 0x13, 0x5f, 0x5b, 0xd8, 0xc7, 0xd3, 0xb0, 0x50, 0xb2, 0x3e, 0xde, 0x0a,
	0x79, 0x7d, 0x98, 0xdd, 0x78, 0xea, 0x8a, 0x0d, 0x70, 0x91, 0x68, 0x01, 0x3d, 0x1c, 0xa0, 0xb2,
	0xb0, 0xfd, 0xc5, 0xb0, 0x1b, 0x94, 0x2a, 0x12, 0xfc, 0xff, 0x20, 0x99, 0x8c, 0xd2, 0xe0, 0x32,
	0x64, 0xeb, 0xf7, 0x32, 0x34, 0x3b, 0x69, 0xbe, 0xbe, 0x37, 0xb1, 0x7e, 0x93, 0x86, 0x4a, 0x0e,
	0xc0, 0xe1, 0x22, 0x40, 0xe5, 0x96, 0xf6, 0x2a, 0xfb, 0x8d, 0xa3, 0xb7, 0xdb, 0x63, 0xb9, 0x76,
	0x01, 0x4c, 0x33, 0x14, 0xe9, 0x02, 0xf1, 0x05, 0xf7, 0x25, 0x6a, 0xf4, 0xc2, 0x84, 0xfb, 0x3a,
	0xf5, 0xc4, 0x2d, 0x1b, 0xee, 0xa3, 0x05, 0x5c, 0xf3, 0x50, 0xfb, 0xa9, 0xa5, 0x9d, 0xe7, 0xac,
	0xaf, 0xb9, 0x96, 0x43, 0xba, 0xe1, 0x4f, 0xdb, 0xb7, 0x7b, 0xb0, 0x35, 0x1f, 0x4c, 0x9a, 0x50,
	0xb9, 0xc6, 0xa1, 0x5b, 0xda, 0x2b, 0xed, 0xd7, 0x69, 0xfa, 0x93, 0x3c, 0x06, 0xe7, 0x86, 0xc5,
	0x09, 0xba, 0xe5, 0xbd, 0xd2, 0x7e, 0xe3, 0xe8, 0xc1, 0x8c, 0x0b, 0xd3, 0x4a, 0x34, 0xc3, 0x7f,
	0x59, 0xfe, 0xa2, 0xd4, 0xfa, 0xc3, 0x81, 0x46, 0xc1, 0x4f, 0xf2, 0x23, 0xd4, 0xfc, 0xab, 0x28,
	0x0e, 0x24, 0x72, 0x9b, 0x8e, 0x27, 0x45, 0xbd, 0x97, 0x79, 0xb3, 0x14, 0xc3, 0x9a, 0x32, 0xb6,
	0x6d, 0xba, 0x30, 0x44, 0x89, 0xdc, 0x47, 0x3a, 0x52, 0x24, 0x7d, 0x58, 0x53, 0xb1, 0xd0, 0x5e,
	0x5e, 0x15, 0xe5, 0x56, 0xcc, 0x1b, 0xe7, 0x6f, 0xfc, 0x46, 0x27, 0x16, 0xfa, 0x95, 0x55, 0x19,
	0xbf, 0xb4, 0xaa, 0x0a, 0x66, 0x45, 0xbe, 0x82, 0x46, 0xa2, 0x50, 0xda, 0xc6, 0x76, 0xab, 0x26,
	0x3f, 0x3b, 0x33, 0xf9, 0xf9, 0x41, 0xa1, 0xcc, 0x64, 0x2f, 0x96, 0x28, 0x24, 0xa3, 0x13, 0x69,
	0x83, 0xc3, 0x94, 0x42, 0xed, 0x3a, 0x86, 0xb9, 0x35, 0xc3, 0x3c, 0x49, 0x6f, 0x2f, 0x96, 0x68,
	0x06, 0x23, 0x8f, 0xa1, 0x96, 0x37, 0x84, 0xbb, 0x6c, 0x28, 0xf7, 0x67, 0x28, 0x79, 0x11, 0x2e,
	0x96, 0xe8, 0x08, 0x9c, 0x12, 0xf3, 0x94, 0xb8, 0xf7, 0x16, 0x10, 0xf3, 0xb0, 0x52, 0x62, 0x0e,
	0x26, 0x3f, 0xc1, 0x56, 0x97, 0x49, 0xf4, 0x66, 0x1a, 0xd2, 0xad, 0x19, 0x99, 0x87, 0x33, 0x32,
	0xa7, 0x4c, 0xe2, 0x74, 0x43, 0x5c, 0x2c, 0xd1, 0xcd, 0xee, 0x1c, 0x7b, 0xea, 0x97, 0x2f, 0xb8,
	0xd2, 0x8c, 0x6b, 0xb7, 0xbe, 0xc0, 0xaf, 0xa7, 0x16, 0x90, 0xfa, 0x95, 0x83, 0x53, 0xa2, 0x44,
	0x25, 0x12, 0xe9, 0xa3, 0x0b, 0x0b, 0x88, 0xd4, 0x02, 0x52, 0x62, 0x0e, 0x3e, 0x5d, 0x86, 0xea,
	0x75, 0xc4, 0x83, 0xcb, 0x6a, 0xad, 0xdc, 0xac, 0x50, 0x60, 0x5a, 0xcb, 0xa8, 0x9b, 0x68, 0x54,
	0xad, 0xdf, 0x60, 0x7d, 0xaa, 0x5a, 0xe4, 0x5d, 0x80, 0x28, 0x40, 0xae, 0xa3, 0x30, 0x42, 0x69,
	0x47, 0xa2, 0x60, 0x21, 0x9f, 0xc0, 0x3d, 0xbb, 0x29, 0xec, 0x6c, 0x4c, 0x54, 0xf0, 0x55, 0x76,
	0x75, 0x86, 0x21, 0xcd, 0x61, 0x64, 0x1b, 0x6a, 0x7d, 0xd4, 0x2c, 0x60, 0x9a, 0xb9, 0x15, 0xa3,
	0x37, 0x3a, 0xb7, 0x8e, 0x01, 0xc6, 0x45, 0x27, 0x87, 0xb0, 0x69, 0x8a, 0xee, 0x85, 0x51, 0x8c,
	0x5e, 0x80, 0xa1, 0x17, 0xf1, 0x00, 0x7f, 0x31, 0x5e, 0x38, 0x74, 0xc3, 0xdc, 0x9d, 0x47, 0x31,
	0x9e, 0x61, 0xf8, 0x2c, 0xbd, 0x68, 0xfd, 0x0a, 0xab, 0x13, 0x0d, 0x40, 0x0e, 0xe6, 0xee, 0x91,
	0x74, 0xe8, 0xea, 0x73, 0x56, 0x02, 0x39, 0x86, 0xd5, 0x1c, 0xe5, 0xa9, 0x01, 0xfa, 0x36, 0x24,
	0xb7, 0x18, 0x52, 0x8e, 0xee, 0x0c, 0xd0, 0xa7, 0x2b, 0x61, 0xe1, 0xd4, 0xfa, 0xa7, 0x04, 0x6f,
	0xcd, 0xdd, 0x06, 0xe4, 0x01, 0xac, 0x74, 0x45, 0xc2, 0x03, 0x2f, 0xe2, 0x83, 0x44, 0x67, 0x9b,
	0xcc, 0xa1, 0x0d, 0x63, 0x7b, 0x66, 0x4c, 0xc4, 0x83, 0x77, 0x7c, 0xc6, 0x05, 0x8f, 0x7c, 0x16,
	0x47, 0xaf, 0xd1, 0x42, 0x3d, 0x15, 0xf5, 0x38, 0xd3, 0x89, 0x44, 0x93, 0xab, 0xe9, 0xd1, 0x32,
	0x1f, 0x88, 0x44, 0xa6, 0x9d, 0x1b, 0x27, 0x48, 0x77, 0x26, 0x14, 0x8c, 0x70, 0x27, 0xe7, 0x93,
	0x73, 0x68, 0x8a, 0x44, 0x4f, 0x6a, 0x56, 0xef, 0xd6, 0x5c, 0xcf, 0x48, 0x23, 0x9d, 0xd6, 0xdf,
	0x25, 0xb8, 0xbf, 0xb0, 0xcd, 0xc9, 0x67, 0xb0, 0x35, 0x93, 0x71, 0x8f, 0xb3, 0x3e, 0xda, 0xde,
	0xd9, 0x9c, 0xce, 0xfa, 0x77, 0xac, 0x8f, 0xe4, 0x23, 0xd8, 0x60, 0xb2, 0x97, 0xf4, 0x91, 0x6b,
	0xef, 0x1a, 0x87, 0xb7, 0x42, 0x06, 0x59, 0x92, 0xea, 0xb4, 0x99, 0x5f, 0x7c, 0x6b, 0xed, 0xe4,
	0x09, 0xec, 0xb2, 0x38, 0x16, 0xb7, 0x18, 0x78, 0x03, 0xa1, 0xa2, 0x54, 0x84, 0xc5, 0x5e, 0x0e,
	0x53, 0x26, 0x51, 0x15, 0xba, 0x6d, 0x31, 0x2f, 0x46, 0x90, 0x93, 0x1c, 0xd1, 0x3a, 0xb0, 0x7d,
	0x92, 0xcf, 0x15, 0xd9, 0x85, 0xba, 0x18, 0xa0, 0x64, 0x66, 0xac, 0x33, 0x47, 0xc7, 0x86, 0xd6,
	0x9f, 0x65, 0x8b, 0xcf, 0xf7, 0x03, 0xf9, 0x10, 0x9c, 0x20, 0xfd, 0x8e, 0x1a, 0xec, 0xda, 0xd1,
	0x66, 0x31, 0x81, 0x67, 0x4c, 0xb3, 0x97, 0xc3, 0x01, 0xd2, 0x0c, 0x42, 0x8e, 0xc0, 0x31, 0x5f,
	0x66, 0xdb, 0x4c, 0xbb, 0x13, 0x7b, 0xd8, 0xfc, 0xec, 0xa4, 0xd7, 0x2f, 0xd2, 0x8f, 0x27, 0xcd,
	0xa0, 0xa9, 0x3f, 0x5a, 0xb2, 0x88, 0x9b, 0x6d, 0x95, 0xc6, 0x53, 0xa3, 0x63, 0x03, 0x79, 0x0e,
	0xeb, 0x6a, 0xc8, 0xfd, 0x2b, 0x29, 0x78, 0xf4, 0x3a, 0xf3, 0xb9, 0x6a, 0xfc, 0x78, 0x7f, 0x62,
	0xf6, 0xac, 0xb3, 0x9d, 0x49, 0x28, 0x9d, 0xe6, 0x92, 0x13, 0x68, 0xb0, 0x5e, 0x4f, 0x62, 0x2f,
	0x93, 0x72, 0x8c, 0xd4, 0x7b, 0xf3, 0xa4, 0x4e, 0xc6, 0x30, 0x5a, 0xe4, 0x10, 0x02, 0x55, 0x53,
	0xe3, 0x65, 0x93, 0x3a, 0xf3, 0xbb, 0xf5, 0x57, 0x09, 0x56, 0x8a, 0xc3, 0x42, 0x8e, 0xa1, 0x11,
	0x26, 0x71, 0xcc, 0x64, 0xcf, 0xcc, 0x56, 0xe9, 0xee, 0xde, 0x2b, 0xe2, 0xc9, 0x0e, 0xd4, 0x23,
	0xe5, 0xf5, 0x51, 0x5f, 0x89, 0xc0, 0xe4, 0xb2, 0x46, 0x6b, 0x91, 0x7a, 0x6e, 0xce, 0xe4, 0x0c,
	0xd6, 0xa7, 0xe7, 0xc5, 0xb9, 0x5b, 0x7f, 0x2d, 0x9a, 0x18, 0x91, 0xcb, 0x6a, 0xad, 0xd2, 0xac,
	0x5e, 0x56, 0x6b, 0xd5, 0xa6, 0xd3, 0xfa, 0xc0, 0xd6, 0x3c, 0x5f, 0xa1, 0x64, 0x0b, 0x96, 0x03,
	0xbc, 0x89, 0xfc, 0xbc, 0x93, 0xed, 0xe9, 0xb4, 0xf2, 0x6f, 0xa9, 0xd4, 0x5d, 0x36, 0xff, 0x7d,
	0x1e, 0xfd, 0x17, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x7d, 0x3f, 0xd8, 0x43, 0x0a, 0x00, 0x00,
}
